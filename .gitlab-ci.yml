stages:
  - test-auth
  - test-sh

.id_tokens:
  id_tokens:
    GITLAB_OIDC_TOKEN:
      aud: https://gitlab.com

get-crendentials:
  extends: .id_tokens
  image: google/cloud-sdk:slim
  stage: test-auth
  script:
    - OIDC_TOKEN=$(gcloud auth print-identity-token)  # Fetch the OIDC token
    - echo "OIDC Token: $OIDC_TOKEN"
    - echo ${GITLAB_OIDC_TOKEN} > .ci_job_jwt_file
    - echo "Created .ci_job_jwt_file"
    - cat .ci_job_jwt_file
    - echo "Contents of .ci_job_jwt_file"
    - gcloud iam workload-identity-pools create-cred-config ${GCP_WORKLOAD_IDENTITY_PROVIDER}
      --service-account="${GCP_SERVICE_ACCOUNT}"
      --output-file=.gcp_temp_cred.json
      --credential-source-file=.ci_job_jwt_file
    - echo "Created credential configuration file"
    - cat .gcp_temp_cred.json
    - echo "Contents of credential configuration file"
    - gcloud auth login --cred-file=`pwd`/.gcp_temp_cred.json --verbosity=debug
    - echo "Logged into Google Cloud"
    - gcloud auth list
    - echo "Auth List:"
    
get-sh:
  extends: .id_tokens
  image: dwdraju/alpine-curl-jq
  stage: test-sh
  script:
    - echo "Checking if GITLAB_OIDC_TOKEN is set..."
    - if [ -z "$GITLAB_OIDC_TOKEN" ]; then echo "GITLAB_OIDC_TOKEN is EMPTY"; exit 1; else echo "GITLAB_OIDC_TOKEN is SET (but masked)"; fi
    - chmod +x infra/exchange_token.sh
    - ./infra/exchange_token.sh











